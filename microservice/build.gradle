/*
 * Copyright 2021-2022 Micro Focus or one of its affiliates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "itom-kotlin-plugin"
    id "application"
    id "itom-jacoco-plugin"
    id "com.benjaminsproule.swagger"
    id "license-report-plugin"
}

ext {
    springBootVersion = "2.6.3"
}

application {
    mainClass.set("com.itom.flork.spring.FlorkSpringMain")
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor:$springBootVersion"

    implementation project(":flork-controller-ioc")
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.4"
    implementation "org.springframework.boot:spring-boot-starter-jersey:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation "ch.qos.logback:logback-core:$logbackVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"

    testImplementation libraries.k8sMockServer
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
}

jar {
    archivesBaseName = "flork-spring-service"
}

test {
    environment "MANAGED_NAMESPACES", "*"
}

swagger {
    apiSource {
        swaggerDirectory = "${projectDir.path}/src/main/container-resources/flork/static/api/"
        swaggerFileName = "openapi"
        springmvc = false
        outputFormats = ["yaml", "json"]
        locations = ["com.itom.flork.kubernetes.api"]
        schemes = ["https"]
        host = "itom-flork:8443"
        basePath = "/"
        info {
            title = "TBD"
            version = buildVersion
            description = ""
        }
    }
}

generateSwaggerDocumentation {
    dependsOn project(":flork-model").tasks["jar"]
    dependsOn project(":flork-controller-core").tasks["jar"]
    dependsOn project(":flork-controller-ioc").tasks["jar"]
    doFirst {
        // https://github.com/gigaSproule/swagger-gradle-plugin/issues/158#issuecomment-585823379
        project.configurations.compileClasspath.resolve()
                .collect { it.toURI().toURL() }
                .each { buildscript.classLoader.addURL it }
    }
}

build {
    finalizedBy generateSwaggerDocumentation
}

task setUpDockerContext(type: Sync) {
    dependsOn build, generateSwaggerDocumentation

    destinationDir = file(dockerContextPath)

    from("src/main/container-resources")
    
    from("${rootProject.projectDir.path}/helm/flork/certs") {
        include "server*"
        into "flork/tls/"
    }
    
    from("${rootProject.projectDir.path}/helm/flork/certs") {
        include "ca.crt"
        into "flork/tls/trustedCAs"
    }

    from(configurations.runtimeClasspath) {
        into "flork/app/lib/"
    }

    from("${buildDir.path}/libs") {
        into "flork/app/lib/"
    }

    doLast {
        File versionFile = file("$dockerContextPath/flork/version.txt")
        if (!versionFile.exists()) versionFile.createNewFile()
        versionFile.text = buildVersion
    }
}
